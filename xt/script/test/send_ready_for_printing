#!/usr/bin/env perl
use NAP::policy "tt";
use Getopt::Long;
use Pod::Usage;
use FindBin::libs;
use FindBin::libs qw( base=lib_dynamic );
use XTracker::Role::WithAMQMessageFactory;

my ($shipment_id, $pick_station);

{
my $p=Getopt::Long::Parser->new(
    config => [qw(
        no_auto_abbrev
        no_getopt_compat
        no_gnu_compat
        no_permute
        no_bundling
        no_ignore_case
        no_auto_version
        no_auto_help
             )],
);
my $help;
$p->getoptions(
    'shipment_id=i' => \$shipment_id,
    'pick_station=i' => \$pick_station,
    'help|h' => \$help,
) or pod2usage(2);

pod2usage(1) if $help;

pod2usage(2) unless $shipment_id && defined($pick_station);
}

my $payload = {
    shipment_id => 's-' . $shipment_id,
    pick_station => $pick_station,
};

my $factory = XTracker::Role::WithAMQMessageFactory->build_msg_factory;

$factory->transform_and_send('XT::DC::Messaging::Producer::WMS::ReadyForPrinting',$payload);

__END__

=head1 NAME

send_ready_for_printing - send the C<ready_for_printing> message

=head1 SYNOPSIS

  send_ready_for_printing --shipment_id 12345 --pick_station 2

=cut

#!/usr/bin/env perl
use NAP::policy "tt";
use Getopt::Long;
use Pod::Usage;
use FindBin::libs;
use FindBin::libs qw( base=lib_dynamic );
use XTracker::Config::Local;
use XTracker::Role::WithAMQMessageFactory;

my ($shipment_id,%sku2quantity,$help,$operator_id);

{
my $p=Getopt::Long::Parser->new(
    config => [qw(
        no_auto_abbrev
        no_getopt_compat
        no_gnu_compat
        no_permute
        no_bundling
        no_ignore_case
        no_auto_version
        no_auto_help
             )],
);
my $help;
$p->getoptions(
    'shipment|s=i' => \$shipment_id,
    'sku-quantity=f' => \%sku2quantity,
    'operator-id=i' => \$operator_id,
    'help|h' => \$help,
) or pod2usage(2);

pod2usage(1) if $help;

pod2usage(2) unless (grep { /^\d+-\d+$/ } keys(%sku2quantity))
                 && (grep { /^\d+$/ } values(%sku2quantity));
}

my $payload = {
    shipment_id => $shipment_id,
    items => [
        map {{sku => $_, quantity => $sku2quantity{$_}}} keys(%sku2quantity)
    ],
};

if ($operator_id) { $payload->{operator_id} = $operator_id }

my $factory = XTracker::Role::WithAMQMessageFactory->build_msg_factory;

$factory->transform_and_send('XT::DC::Messaging::Producer::WMS::IncompletePick',$payload);

__END__

=head1 NAME

send_incomplete_pick - send the C<incomplete_pick> message

=head1 SYNOPSIS

  send_incomplete_pick --shipment 987654 --sku-quantity 12345-012=1

  send_incomplete_pick --shipment 987654 --sku-quantity 12345-012=1 --sku-quantity 12345-013=2

  send_incomplete_pick --shipment 987654 --sku-quantity 12345-012=1 --sku-quantity 12345-013=2 --operator-id 5009

=cut

#!/opt/xt/xt-perl/bin/perl

use NAP::policy "tt";

#use lib '/opt/xt/deploy/xtracker/lib';
use FindBin::libs;
use FindBin::libs qw( base=lib_dynamic );

use Getopt::Long;
use Pod::Usage;

use XTracker::Script::RTV::QuantityFix;

=head1 NAME

fix_duplicate_rtv_quantities

=head1 SYNOPSIS

fix_duplicate_rtv_quantities [-d] [-h] [-t sleep_length/sleep_every]

=over

=item -d, --dryrun

Rollback any updates.

=item -h, --help

Show this screen.

=item -t, --throttle

Throttle the messages we send to the product service.

=back

=head1 DESCRIPTION

This script is to be run when we have mismatches between quantity and
rtv_quantity. It does a few things:

=over

=item

Deletes Main and Dead stock from the rtv_quantity table as they have no place
there.

=item

Deletes rows in the quantity table that lack expected entries in the
rtv_quantity table.

=item

Automatically updates the location of any rows in the rtv_quantity table that
it can to match those of the quantity table.

=item

Print a report on any rows that couldn't be automatically updated.

=back

=cut

my %opt;
my $result = GetOptions( \%opt, 'dryrun|d', 'help|h', 'throttle|t=s' );

pod2usage(-verbose => 2) if (!$result || $opt{help} );

my ($sleep_length,$sleep_every) = split /\//,($opt{throttle}//'0/100000');
$sleep_length = 0 unless $sleep_length=~m{^\d+(?:.\d+)?$};
$sleep_every = 100000 unless $sleep_every=~m{^\d+$};

XTracker::Script::RTV::QuantityFix->new(
    dryrun       => !!$opt{dryrun},
    sleep_every  => $sleep_every,
    sleep_length => $sleep_length,
)->invoke;

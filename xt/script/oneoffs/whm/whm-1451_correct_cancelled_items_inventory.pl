#!/usr/bin/env perl
## no critic(ProhibitExcessMainComplexity,ProhibitUselessNoCritic)
use strict;
use warnings;
# Hard-code lib directory so this script can be run from any dir on live
use lib '/opt/xt/deploy/xtracker/lib';
use FindBin::libs qw( base=lib_dynamic );
use XTracker::Database qw/schema_handle/;
use XTracker::Constants::FromDB qw(
    :flow_status
    :channel_transfer_status
    :stock_action
    :shipment_item_status 
);
use XTracker::Config::Local;
use XTracker::Constants     qw/ $APPLICATION_OPERATOR_ID /;
use XTracker::Database::Shipment qw( :DEFAULT set_cancelled_item_adjusted log_cancelled_item_adjusted );
use Getopt::Long;
use XTracker::Database::Stock qw( update_quantity);
use XTracker::Database::Logging qw( log_stock );
use Pod::Usage;

=head1 NAME

script/oneoffs/whm/whm-1451_correct_cancelled_items_invetory.pl

=head1 DESCRIPTION

Adjust all unajusted cancelled_items associated with cancelled shipment_item.
Decrement xt_stock if by adjusting this item the free stock exeeds iws free stock.

=head1 SYNOPSIS 

     To run this script you must pass the path to 3 .csv files that are generated by reconciliation report script
     ex : perl script/oneoffs/whm/whm-1451_correct_cancelled_items_invetory.pl --iws_only /home/skus_in_iws_only.csv --differ /home/skus_that_differ.csv --xt_only /home/skus_in_xt_only.csv

=cut

my $schema = schema_handle;
my $dbh = $schema->storage->dbh;

my $skus_in_iws_only;
my $skus_that_differ;
my $path_to_iws_only;
my $path_to_differ;
my $path_to_xt_only;
my $help;

GetOptions( 'iws_only=s' => \$path_to_iws_only,
            'differ=s'   => \$path_to_differ,
            'xt_only=s'  => \$path_to_xt_only,
            'help'       => \$help
);


pod2usage(1) if (!$path_to_differ || !$path_to_iws_only || !$path_to_xt_only || $help);

open (my $fh_iws_only, "<", $path_to_iws_only) or die $!;
open (my $fh_differ, "<", $path_to_differ) or die $!;
open (my $fh_xt_only, "<", $path_to_xt_only) or die $!;

my @lines_iws_only = <$fh_iws_only>;
my @lines_differ = <$fh_differ>;
my @lines_xt_only = <$fh_xt_only>;

close $fh_iws_only;
close $fh_differ;
close $fh_xt_only;

foreach my $line (@lines_differ){

    my ($channel, $sku, $status, $xt_unavailable, $iws_unavailable, 
        $difference_unavailable, $xt_allocated, $iws_allocated, 
        $difference_allocated, $xt_available, $iws_available, $difference_Available) = split (/,/, $line);

        next if $channel eq 'channel';
        next if !$sku;

        $skus_that_differ->{$channel}->{$sku}->{$status}->{xt_available} = $xt_available;
        $skus_that_differ->{$channel}->{$sku}->{$status}->{iws_available} = $iws_available;
}

foreach my $line (@lines_iws_only){
       my ($channel, $sku, $status, $unavailable, $allocated, $available) = split (/,/, $line);
       next if $channel eq 'channel';
       next if !$sku;
       $skus_in_iws_only->{$channel}->{$sku}->{$status}->{available} = $available;
         
}

foreach my $line (@lines_xt_only){
       my ($channel, $sku, $status, $unavailable, $allocated, $available) = split (/,/, $line);
       next if $channel eq 'channel';
       next if !$sku;
       $skus_that_differ->{$channel}->{$sku}->{$status}->{xt_available} = $available;
       $skus_that_differ->{$channel}->{$sku}->{$status}->{iws_available} = 0;
}

my $unadjusted_cancelled_items = $schema->resultset('Public::CancelledItem')->search(
        {
            'me.adjusted' => 0,
            'shipment_item.shipment_item_status_id' => $SHIPMENT_ITEM_STATUS__CANCELLED,
        },
        {
            join       => 'shipment_item',
            '+select' => ['shipment_item.variant_id'],
            '+as'     => ['variant_id'],
        }
    );

## loop throw unadjusted cancelled items 

while (my $item = $unadjusted_cancelled_items->next){
    #see if the cancelled item was also adjusted
    my $was_adjusted = $schema->resultset('Public::CancelledItem')->search({ adjusted=> 1,
                                                                            shipment_item_id => $item->shipment_item_id });
    next if $was_adjusted->next;

    my $shipment_item   = $item->shipment_item;
    my $shipment        = $shipment_item->shipment;
    my $channel         = $shipment->get_channel;
    my $variant         = $shipment_item->get_true_variant;
    my $sku             = $variant->sku;

    next if $shipment_item->is_virtual_voucher;
    if (!$channel){
        print "This shipment_item does not belong to any channel! ". $shipment_item->id . "\n";
        next;
    }

    my $xtracker_available_stock = $skus_that_differ->{uc($channel->name)}->{$sku}->{MAIN}->{xt_available} // 0;
    my $iws_available_stock = $skus_that_differ->{uc($channel->name)}->{$sku}->{MAIN}->{iws_available} // 
                              $skus_in_iws_only->{uc($channel->name)}->{$sku}->{MAIN}->{available} // 0;

    ## transaction
    eval{
        $schema->txn_do( sub {
             ## Adjust it
            set_cancelled_item_adjusted($dbh, $item->id);
            log_cancelled_item_adjusted($dbh, $item->id, $APPLICATION_OPERATOR_ID);
            my $updated_quantity_id;

            my $message;
            #check if xtracker_stock > iws stock for this variant
            if ($xtracker_available_stock > $iws_available_stock){
                ##decrement 1 quantity from IWS location and log it
                $message = ' Decrement 1 quantity ';
                $updated_quantity_id = update_quantity( $dbh, {
                    variant_id  => $variant->id,
                    location    => 'IWS',
                    quantity    => -1,
                    type        => 'dec',
                    channel_id  => $channel->id,
                    current_status_id => $FLOW_STATUS__MAIN_STOCK__STOCK_STATUS, ## should be always MAIN
                });
                if ($updated_quantity_id){
                    log_stock( $dbh, {
                        variant_id  => $variant->id,
                        quantity    => -1,
                        action      => $STOCK_ACTION__MANUAL_ADJUSTMENT,
                        operator_id => $APPLICATION_OPERATOR_ID,
                        notes       => 'Remove one quantity from IWS location when running whm-1451 script',
                        channel_id  => $channel->id,
                    });

                    $xtracker_available_stock --;
                    ## Report available stock, maybe we fixed the discrepancy
                    $message .= ' xt and iws are in sync '
                        if $iws_available_stock == $xtracker_available_stock;
                }
                else{
                     $message .= " No quantity found, unallocated this cancelled item ".$item->id;
                }
            }
            else{
                $message = " Adjusted! ";
            }

            $skus_that_differ->{uc($channel->name)}->{$sku}->{MAIN}->{xt_available}-- if $updated_quantity_id;
            printf ("Adjusted stock for sku %s, channel %s : %s\n",$sku , $channel->name, $message);
        });
    };
    if ($@){
        print "Could not adjust the stock for shipment_item". $shipment_item->id." : $@ \n";
    }
}

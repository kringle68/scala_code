#!/bin/sh
#
# xtctl - this script starts and stops XT
#
# chkconfig:   - 85 15
# description:  XT is the warehouse workhorse app

# pidfile:     /var/run/plackup.xt.pid

PID=/var/run/nap/xt.pid

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# source XT required data
. /etc/xtdc/xtdc.env

# Check that networking is up.
[ "$NETWORKING" = "no" ] && exit 0

PORT=8529
WORKERS=${XTDC_WORKERS}
MAXREQUESTS=${XTDC_MAXREQUESTS}
XT_DIR=$XTDC_BASE_DIR
XT_APP="$XT_DIR/xt.psgi"
RUNAS="xt-web"

plackup="/opt/xt/xt-perl/bin/plackup"
plackup_args="-E production -s Starman --listen :$PORT --pid $PID --workers $WORKERS --max-requests $MAXREQUESTS --preload-app --error-log=/var/log/nap/xt/xt-error.log -D"
website="XT"

lockfile=/var/lock/subsys/plackup.xt

# We need to make sure we change the current working directory to a world
# readable location. If the current directory wasn't readable by the $runas
# user, then loading modules by iterating through @INC would fail when trying
# to read ('.')
cd '/'

start() {
    [ -x $plackup ] || exit 5
    [ -f $XT_APP ] || exit 6

    # Set the umask for group write permissions
    umask 002

    echo -n $"Starting $website: "
    daemon --user $RUNAS $plackup $plackup_args -a $XT_APP 2>&1 > /dev/null
    retval=$?
    if [ $retval -eq 0 ]; then
        success $"$website started"
        touch $lockfile
    else
        failure $"Unable to start"
    fi
    echo
    return $retval
}

stop() {
    echo -n $"Stopping $website: "
    if [ -f $PID ]; then
        kill `cat $PID` 2>&1> /dev/null
        retval=$?
        [ $retval -eq 0 ] && success && rm -f $lockfile
        echo
        return $retval
    fi
    failure $"pid $PID not found"
    echo
    return 1
}

restart() {
    stop
    start
}

case "$1" in
    start)
        $1
        ;;
    stop)
        $1
        ;;
    restart)
        $1
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart}"
        exit 2
esac


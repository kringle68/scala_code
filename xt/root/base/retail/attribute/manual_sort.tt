<style type="text/css">

div.workarea { 
	position: relative;
	width: [% (cells_across * 252) + 2 %]px;
	border: 1px solid #888;
	margin-left: auto;
	margin-right: auto;
}

.activeDragBox {
    display:block; 
    float:left; 
    background-color: #fff;
    border:1px solid #ccc;
    cursor: move;
}

.inactiveDragBox {
    display:block; 
    float:left; 
    background-color: #fff;
    border:1px solid #bbb;
    filter:alpha(opacity=40);
    opacity: 0.4;
    -moz-opacity:0.4;
}

td {
    font: normal 11px Arial #999;
}

</style>

Click and drag products into the desired position and click on 'Save Current Order' to save your changes.<br />
Please note that none of your changes will be applied until they have been saved.<br />
<br />
<br />

<div id="user_actions_top">
	<table width="100%">
		<tr>
			<td><strong>[% attribute_type %]:</strong> [% attribute_name %]</td>
			<td align="right"> <input class="button" type="button" id="saveButton" value="Save Current Order" /></td>
		</tr>
	</table>
</div>

<br />

<div style="position: relative; width: 100%; text-align: center;">

<div class="workarea" id="dragContainer">

	<!--
	<div id ="FeatureProduct" style="display:block; float:left; background-color:#ddd; border: 1px solid #999">
		<table width="225" height="160" cellspacing="0" border="0">
			<tr>
				<td align="center" valign="center"><strong>Featured Product Placeholder</strong></td>
			</tr>
		</table>
	</div>
	-->

	[% SET loop_count = 1 %]

	[% WHILE (product = products.next) %]

		[% IF product.get_column('visible') == 1 %]

			<div id="li_[% product.get_column('sort_order') %]_[% product.get_column('id') %]" class="activeDragBox">
				<table width="250" height="140" cellspacing="0" border="0">
					<tr height="30">
						<td colspan="2">&nbsp;&nbsp;[% loop_count %].</td>
					</tr>
					<tr height="130" valign="top">
						<td width="90" align="center"><img src="http://[% xt_url %]/images/product/[% product.get_column('id') %]/12.jpg" width="70"></td>
						<td>
							<strong>[% product.get_column('id') %]</strong><br />
							<br />
							<strong>[% product.get_column('designer') %]</strong><br />
							[% product.get_column('name') %]<br />
						</td>
					</tr>
				</table>
			</div>
			[% loop_count = loop_count + 1 %]

		[% END %]

	[% END %]
	<br clear="all" />
</div>
<br />

<div id="user_actions_foot">
	<table width="100%">
		<tr>
			<td><strong>[% attribute_type %]:</strong> [% attribute_name %]</td>
			<td align="right"> <input class="button" type="button" id="saveButton2" value="Save Current Order" /></td>
		</tr>
	</table>
</div>

<br />

[% SET dummy_value = products.reset %]

<span class="title title-[% channel_config.$sales_channel %]">Invisible & Non-Live Products</span><br />

<div class="workarea" id="inactiveProds">

	[% WHILE (product = products.next) %]

		[% IF product.get_column('visible') != 1 %]

			<div id="li_[% product.get_column('sort_order') %]_[% product.get_column('id') %]" class="inactiveDragBox">
				<table width="250" height="160" cellspacing="0" border="0">
					<tr height="20">
						<td colspan="2">&nbsp;&nbsp;[% loop_count %].</td>
					</tr>
					<tr height="165">
						<td width="90" align="center"><img src="http://[% xt_url %]/images/product/[% product.get_column('id') %]/12.jpg" width="70"></td>
						<td>
							<strong>[% product.get_column('id') %]</strong><br />
							<br />
							<strong>[% product.get_column('designer') %]</strong><br />
							[% product.get_column('name') %]<br />
							<br />
							[% IF product.get_column('live') == 1 %]
								[% IF product.get_column('visible') == 1 %]
									Live	
								[% ELSE %]
									Invisible
								[% END %]
							[% ELSE %]
								Non-Live
							[% END %]
						</td>
					</tr>
				</table>
			</div>

			[% loop_count = loop_count + 1 %]
		[% END %]

	[% END %]

	<br clear="all" />
</div>

</div>

<!-- grey mask to go behind pop-up layers -->
<div id='screenMask' style="display:none; z-index:10; position:absolute; left:0px; top:0px; width:100%; height:100%; background-color:#000;filter:alpha(opacity=10);opacity: 0.1;-moz-opacity:0.1;">&nbsp;</div>


<script type="text/javascript" src="/yui/build/utilities/utilities.js?_yuiversion=2.3.1"></script>
<script type="text/javascript" src="/yui/connection/connection.js?_yuiversion=2.3.1"></script>
<script type="text/javascript" src="/yui/element/element-min.js?_yuiversion=2.3.1"></script>
<script type="text/javascript" src="/yui/datasource/datasource-min.js?_yuiversion=2.3.1"></script>

<script type="text/javascript">

(function() {

var Dom = YAHOO.util.Dom;
var Event = YAHOO.util.Event;
var DDM = YAHOO.util.DragDropMgr;
var submit_button   = true;


var handleSuccess = function(oResponse){

	if (oResponse.responseText != 'OK'){
		alert(oResponse.responseText);
	}
	else {
		alert('New order successfully saved');
	}

    // re-enable the use of the submit button
    submit_button = true;

	// hide loading div
	YAHOO.example.container.wait.hide();
	hideScreenMask();

}


var handleFailure = function(oResponse){

    if(oResponse.responseText !== undefined){
            alert(oResponse.statusText);
    }

    // re-enable the use of the submit button
    submit_button = true;

	// hide loading div
	YAHOO.example.container.wait.hide();
}

var saveCallback =
{
  success:handleSuccess,
  failure:handleFailure
};

//////////////////////////////////////////////////////////////////////////////
// example app
//////////////////////////////////////////////////////////////////////////////
YAHOO.example.DDApp = {
    init: function() {

		var items = dragContainer.getElementsByTagName("div");
            
        for (i=0;i<items.length;i=i+1) {
		if (items[i].id != 'FeatureProduct'){
			new YAHOO.example.DDList(items[i].id);
		}
        }

        Event.on("saveButton", "click", this.saveOrder);
		Event.on("saveButton2", "click", this.saveOrder);
        Event.on("switchButton", "click", this.switchStyles);
    },

    saveOrder: function() {
        // if you can't submit then return and don't do anything
        if ( submit_button == false )
            return false;

        // turn off succesive submits until this one has finished
        submit_button = false;

        var parseList = function(ul) {
            
		var ajax_data = "";
		
		var items = dragContainer.getElementsByTagName("div");	
            
		for (i=0;i<items.length;i=i+1) {
			if (items[i].id != 'FeatureProduct'){
				ajax_data += items[i].id + "-";
			}
		}

		var items = inactiveProds.getElementsByTagName("div");

		for (i=0;i<items.length;i=i+1) {
			if (items[i].id != 'FeatureProduct'){
				ajax_data += items[i].id + "-";
			}
		}
		
		//alert(ajax_data);

		// show loading div
		showLoadingLayer();

        var postData = 'data='+ ajax_data;

        var url = '/Retail/AttributeManagement/SetProductSorting?ms=' + new Date().getTime() + '&attribute_id=[% attribute_id %]&channel_id=[% channel_id %]&channel_config=[% channel_info.config_section %];

        YAHOO.util.Connect.initHeader(
            "X-CSRF-Token", $("meta[name='csrf_token']").attr("content")
        );
        var request = YAHOO.util.Connect.asyncRequest('POST', url, saveCallback, postData);

        };

        parseList();
    }

};

//////////////////////////////////////////////////////////////////////////////
// custom drag and drop implementation
//////////////////////////////////////////////////////////////////////////////

YAHOO.example.DDList = function(id, sGroup, config) {

    YAHOO.example.DDList.superclass.constructor.call(this, id, sGroup, config);

    this.logger = this.logger || YAHOO;
    var el = this.getDragEl();
    Dom.setStyle(el, "opacity", 0.87); // The proxy is slightly transparent

    this.goingUp = false;
    this.lastY = 0;
};

YAHOO.extend(YAHOO.example.DDList, YAHOO.util.DDProxy, {

    startDrag: function(x, y) {
        this.logger.log(this.id + " startDrag");

        // make the proxy look like the source element
        var dragEl = this.getDragEl();
        var clickEl = this.getEl();
        Dom.setStyle(clickEl, "visibility", "hidden");

        dragEl.innerHTML = clickEl.innerHTML;

        Dom.setStyle(dragEl, "color", Dom.getStyle(clickEl, "color"));
        Dom.setStyle(dragEl, "backgroundColor", "#D3DBC1");
        Dom.setStyle(dragEl, "border", "1px solid gray");
    },

    endDrag: function(e) {

        var srcEl = this.getEl();
        var proxy = this.getDragEl();

        // Show the proxy element and animate it to the src element's location
        Dom.setStyle(proxy, "visibility", "");
        var a = new YAHOO.util.Motion( 
            proxy, { 
                points: { 
                    to: Dom.getXY(srcEl)
                }
            }, 
            0.2, 
            YAHOO.util.Easing.easeOut 
        )
        var proxyid = proxy.id;
        var thisid = this.id;

        // Hide the proxy and show the source element when finished with the animation
        a.onComplete.subscribe(function() {
                Dom.setStyle(proxyid, "visibility", "hidden");
                Dom.setStyle(thisid, "visibility", "");
            });
        a.animate();
    },

    onDragDrop: function(e, id) {

        // If there is one drop interaction, the li was dropped either on the list,
        // or it was dropped on the current location of the source element.
        if (DDM.interactionInfo.drop.length === 1) {

            // The position of the cursor at the time of the drop (YAHOO.util.Point)
            var pt = DDM.interactionInfo.point; 

            // The region occupied by the source element at the time of the drop
            var region = DDM.interactionInfo.sourceRegion; 

            // Check to see if we are over the source element's location.  We will
            // append to the bottom of the list once we are sure it was a drop in
            // the negative space (the area of the list without any list items)
            if (!region.intersect(pt)) {
                var destEl = Dom.get(id);
                var destDD = DDM.getDDById(id);
                destEl.appendChild(this.getEl());
                destDD.isEmpty = false;
                DDM.refreshCache();
            }

        }
    },

    onDrag: function(e) {

        // Keep track of the direction of the drag for use during onDragOver
        var y = Event.getPageY(e);

        if (y < this.lastY) {
            this.goingUp = true;
        } else if (y > this.lastY) {
            this.goingUp = false;
        }

        this.lastY = y;
    },

    onDragOver: function(e, id) {
    
        var srcEl = this.getEl();
        var destEl = Dom.get(id);

        // We are only concerned with list items, we ignore the dragover
        // notifications for the list.
        if (destEl.nodeName.toLowerCase() == "div") {
            var orig_p = srcEl.parentNode;
            var p = destEl.parentNode;

            if (this.goingUp) {
                p.insertBefore(srcEl, destEl); // insert above
            } else {
                p.insertBefore(srcEl, destEl.nextSibling); // insert below
            }

            DDM.refreshCache();
        }
    }
});

Event.onDOMReady(YAHOO.example.DDApp.init, YAHOO.example.DDApp, true);

})();


YAHOO.namespace("example.container");

function showLoadingLayer (){

	showScreenMask();
	
	if (!YAHOO.example.container.wait) {

            // Initialize the temporary Panel to display while waiting for external content to load

	    YAHOO.example.container.wait =
                new YAHOO.widget.Overlay(
                    "loader_wait",
                    {
                        fixedcenter:    false,
                        close:          false,
                        draggable:      false,
                        zindex:         10,
                        x: 30,
                        y: 15,
                        visible:        false
                    }
                )
            ;

            YAHOO.example.container.wait.setBody("<img src=\"/images/bigrotation2.gif\" align=\"right\" />");
            YAHOO.example.container.wait.render(document.body);

        }

	// Show the Panel
        YAHOO.example.container.wait.show();
}


function showScreenMask(){
	
	// get browser size for mask layer
	var winW = 630, winH = 460;

	if (parseInt(navigator.appVersion)>3) {
		if (navigator.appName=="Netscape") {
			winW = window.innerWidth;
			winH = window.innerHeight;
		}
		if (navigator.appName.indexOf("Microsoft")!=-1) {
			winW = document.body.offsetWidth;
			winH = document.body.offsetHeight;
		}
	}

	// set mask layer width and height to browser dimensions
	document.getElementById('screenMask').style.width = winW - 18;
	document.getElementById('screenMask').style.height = winH;

	// show mask layer
	document.getElementById('screenMask').style.display = "block";

}

function hideScreenMask(){

	document.getElementById('screenMask').style.display = "none";

}


</script>

<script type="text/javascript" language="javascript" src="/yui/paginator/paginator-min.js"></script>
[%
	IF sales_channel;
		PROCESS attrib_management;
	ELSE;
		PROCESS page_elements/channel_selection.tt
					channel_list	= channels,
					url_base		= "/Retail/AttributeManagement",
					prompt			= "Please select a Sales Channel from the list below:";
	END;
%]

[% BLOCK attrib_management %]

<link rel="stylesheet" type="text/css" href="/css/xt_datatable.css" />

<style type="text/css">

select.attrList { 
 background-color: #eee;  
}

textarea { 
 background-color: #eee;  
}

.popHd {
	font: bold 11px Arial;
	padding-top: 7px;
	padding-left:10px;
	padding-bottom:3px;
	margin-bottom:7px;
	border-bottom: 1px dotted #666;
	background:url('/images/popHDBG.gif');
	height: 28px;	
} 

.popFt {
        font: bold 11px Arial;
        padding-top:6px;
	padding-bottom:6px;
	padding-right:10px;
        margin-top:10px;
        border-top: 1px dotted #999;
	text-align: right;
}

.popFt input {
	margin-left:10px;
}

.AJAXPop {
	z-index: 2000;
	position:absolute;
	display: none;
	background-color: #aaa;
	padding: 0px 0px 2px 2px;
}

#top_half {
	position: relative;
	width: 100%;
}

</style>

<div id="top_half">

<div id="attributes" style="float: left; text-align:left; width:230px;">
	<form name="at_form">
        [% INCLUDE page_elements/forms/dbl_submit_token.tt %]
		<span class="title title-[% channel_config.$sales_channel %]">Attribute Types</span><br />
		<select name="attribute_type" class="attrList" size="20" onChange="makeAttributeRequest(this.options[this.selectedIndex].value);" style="width:210px;">
			[% WHILE (type = attribute_types.next) %]
				<option value="[% type.get_column('id') %]-[% type.get_column('name') %]">[% type.get_column('name') %]</option>
			[% END %]
		</select>
	</form>
</div>

<div id="attribute_values" style="display:none; float: left; text-align:left; width:230px;">
	<form name="av_form">
        [% INCLUDE page_elements/forms/dbl_submit_token.tt %]
		<span class="title title-[% channel_config.$sales_channel %]">Attributes</span><br />
		<select name="attribute_value" class="attrList" size="20" onChange="showProductList(this.options[this.selectedIndex].value);" style="width:210px; margin-bottom:9px">
		</select><br />
	</form>
</div>


<div id="av_management" style="display:none; float: right; text-align:left; width:350px;">
	<form name="av_managementForm" enctype="multipart/form-data">
        [% INCLUDE page_elements/forms/dbl_submit_token.tt %]
        <div id="addSynonyms" style="padding-top: 20px; padding-bottom: 8px; border-bottom: dotted 1px #999">
			<span class="title title-[% channel_config.$sales_channel %]">Synonyms</span><br />
			<textarea name="synonyms" rows="3" style="margin-top:3px; width: 100%;" readonly="readonly"></textarea>
        </div>
        <div id="previewURL" style="padding-top: 23px; padding-bottom: 1px; border-bottom: dotted 1px #999">
			<span id="url"></span>
        </div>
		<div id="padderDiv" style="display:none">
			<br /><br /><br /><br />
        </div>
	</form>
</div>

<br clear="all" />
</div> [%# top_half div %]

[% INCLUDE page_elements/forms/dbl_submit_token.tt %]

<!-- product list controls -->
<div id="product_list_controls" style="display:none; z-index:7; position:relative; background-color:#ffffff; width:756px; font-size:11px;">
	<span class="title title-[% channel_config.$sales_channel %]">Attribute Products</span><br />
	<table width="100%" border="0">
		<tr>
			<td style="height:30px; border-top: 1px dotted #999;">
				<strong>View:</strong>&nbsp;
				<select id="viewType" style="font-size:11px" onChange="switchProductView(this[this.selectedIndex].value)">
					<option>-------------------</option>
					<option id="view_all" value="view_all" selected="selected">All Products</option>
					<option id="view_live_visible" value="view_live_visible">Live & Visible</option>
					<option id="view_live_invisible" value="view_live_invisible">Live & Invisible</option>
					<option id="view_nonlive" value="view_nonlive">Non-Live</option>
					<option>-------------------</option>
				</select>
			</td>
			<td align="right" style="height:35px; border-top: 1px dotted #999;">
			</td>
		</tr>
	</table>
</div>

<!-- YUI data table containing products -->

<div id="product_list" style="display:none; z-index:1; position:relative; width: 756px;"></div>

<div id="comma_list" style="display:none; z-index:1; position:relative; width: 756px;"></div>

<!-- grey mask to go behind pop-up layers -->
<div id='screenMask' style="display:none; z-index:10; position:absolute; left:0px; top:0px; width:100%; height:100%; background-color:#000;filter:alpha(opacity=10);opacity: 0.1;-moz-opacity:0.1;">&nbsp;</div>


<div id="AJAX_Display" class="AJAXPop">
	<div style="width:350px; background-color:#FFF; border: 1px solid #333">
		<div class="popHd">Response</div>

		<div id="AJAX_Response" style="padding-left: 20px; padding-top:20px; padding-bottom:40px; width:340px;"></div>

		<div class="popFt">
			<input type="button" class="button" name="" value="Close" onClick="hideAJAXResponse();">
		</div>
	</div>
</div>


<script type="text/javascript" src="/javascript/centeredDiv.js"></script>
<script type="text/javascript" src="/yui/connection/connection.js?_yuiversion=2.3.1"></script>

<script type="text/javascript">

var cur_attr_type_name;
var cur_attr_type_id;
var cur_attr_name;
var cur_attr_key;
var cur_attr_id;

var showMask = 0;

var synonyms		= new Array();

var attributesLoaded = 0; 

var handleSuccess = function(oResponse){

	if (oResponse.responseText != 'OK'){
		alert(oResponse.responseText);
	}

	// hide loading div
	YAHOO.example.container.wait.hide();

	if (showMask != 1){
		hideScreenMask();
	}
}

var handleAttributeSuccess = function(oResponse){

	var oResults = eval("(" + oResponse.responseText + ")");

	// clear out select
	document.av_form.attribute_value.options.length = 0;

	// populate it
	if((oResults.ResultSet.Result) && (oResults.ResultSet.Result.length)) {

                //Result is an array if more than one result
                if(YAHOO.lang.isArray(oResults.ResultSet.Result)) {
			
                        for (var i=0, j=oResults.ResultSet.Result.length; i<j; i++) {

				document.av_form.attribute_value.options[i] = new Option(oResults.ResultSet.Result[i][1],oResults.ResultSet.Result[i][0]+'-'+oResults.ResultSet.Result[i][1]+'-'+oResults.ResultSet.Result[i][2]);

				synonyms[ oResults.ResultSet.Result[i][0] ] = oResults.ResultSet.Result[i][3];

			}
		}
	}

	document.getElementById('attribute_values').style.display = "block";

	attributesLoaded = 1; 

	// hide loading div
	YAHOO.example.container.wait.hide();

	if (showMask != 1){
		hideScreenMask();
	}

}

var handleFailure = function(oResponse){

	if(oResponse.responseText !== undefined){
		alert(oResponse.statusText);
	}

	if (showMask != 1){
		hideScreenMask();
		YAHOO.example.container.wait.hide();
	}
}

var attributeCallback =
{
  success:handleAttributeSuccess,
  failure:handleFailure
};

var genericCallback =
{
  success:handleSuccess,
  failure:handleFailure
};



function makeAttributeRequest(type){

	// show loading div
	showLoadingLayer();

	var arr = type.split("-");
	
	cur_attr_type_id	= arr[0];
	cur_attr_type_name	= arr[1];

	var request = YAHOO.util.Connect.asyncRequest('GET', '/Retail/AttributeManagement/GetAttributes?ms=' + new Date().getTime() + '&type_id='+ cur_attr_type_id + '&channel_id=[% channel_id %]', attributeCallback);

	// hide AV management, product list and controls layers
	document.getElementById('av_management').style.display			= 'none';
	document.getElementById('product_list').style.display			= 'none';
	document.getElementById('product_list_controls').style.display	= 'none';	
}


// display action popup layer

function showActionLayer(layerName){

	// get browser size for mask layer
	var winW = 630, winH = 460;

	if (parseInt(navigator.appVersion)>3) {
		if (navigator.appName=="Netscape") {
			winW = window.innerWidth;
			winH = window.innerHeight;
		}
		if (navigator.appName.indexOf("Microsoft")!=-1) {
			winW = document.body.offsetWidth;
			winH = document.body.offsetHeight;
		}
	}

	// set mask layer width and height to browser dimensions
	document.getElementById('screenMask').style.width = winW - 18;
	document.getElementById('screenMask').style.height = winH;

	// write value passed to function to placeholder in div if required
	if (cur_attr_type_name){
		// placeholder is a 'span'
		if (document.getElementById(layerName+'_dynValue').innerHTML != ''){
			document.getElementById(layerName+'_dynValue').innerHTML = cur_attr_type_name;
		}
		// placeholder is a form field
		else {
			document.getElementById(layerName+'_dynValue').value = cur_attr_type_name;	
		}
	}

	// show mask layer
	document.getElementById('screenMask').style.display = "block";

	// show action layer
	document.getElementById(layerName).style.display = "block";
}

function showEditAttributeLayer () {

    if (document.av_form.attribute_value.selectedIndex > 0 ) {
        var attribute = document.av_form.attribute_value.options[document.av_form.attribute_value.selectedIndex].value;

        var arr = attribute.split("-");

        // insert value select into 'ActionLayer'
        $('#edit_attribute_name').val(arr[1]);

        showActionLayer('actionEditAttribute');

	} else {
	    alert('You must select an Attribute to edit');
	}
}


// hide popup action layer

function hideActionLayer(layerName){

	// hide mask layer
	document.getElementById('screenMask').style.display = "none";

	// hide action layer
	document.getElementById(layerName).style.display = "none";
}




// load product list via XHR JSON and display on page

function showProductList(attribute, live, visible){

	var arr = attribute.split("-");
	
	attribute_id	= arr[0];
	attribute_name	= arr[1];
	attribute_key	= arr[2];


	// check if attributes have finished loading
	if (attributesLoaded == 1){

		// initiate JSON call
		YAHOO.example.XHR_JSON.init(attribute_id, live, visible);

		// set View type select box default to All Products
//		if (live != 'true' && visible != 'true'){
//			document.getElementById('view_all').selected = true;
//		}

		// show product list controls layer
		document.getElementById('product_list_controls').style.display = 'block';
			
		// show product list layer
		document.getElementById('product_list').style.display = 'block';
		

		// populate synonyms
		document.av_managementForm.synonyms.value = synonyms[attribute_id];

		// populate URL for list attributes
		document.getElementById('url').innerHTML = '';

		if ( cur_attr_type_name.match("List") ){
			document.getElementById('url').innerHTML = '<span class="title title-[% channel_config.$sales_channel %]">Website URL</span><br />&nbsp;&nbsp;<a href="http://[% channels.$channel_id.url %]/Shop/List/' + attribute_key + '" target="_blank">[% channels.$channel_id.url %]/Shop/List/' + attribute_key + '</a><br /><br />';
			
			document.getElementById('previewURL').style.display = 'block';
			document.getElementById('padderDiv').style.display = 'none';
		}
		else if (cur_attr_type_name == 'Slug Image'){

			initUpload();

			document.getElementById('url').innerHTML = '<span class="title title-[% channel_config.$sales_channel %]">Slug Image</span><br /><table width="100%"><tr><td align="right"><strong>Current Image:</strong>&nbsp;&nbsp;</td><td><img src="/[% channels.$channel_id.slug_path %]' + attribute_key + '.gif" name="currentSlugImg"></td></tr></table>';

			document.getElementById('previewURL').style.display		= 'block';
			document.getElementById('padderDiv').style.display		= 'none';
		}
		else {
			document.getElementById('previewURL').style.display	= 'none';
			document.getElementById('padderDiv').style.display	= 'block';
		}


		// show av management layer
		document.getElementById('av_management').style.display = 'block';

		cur_attr_name	= attribute_name;
		cur_attr_id	= attribute_id;
		cur_attr_key	= attribute_key;

		// if redirected back to page then highlight selected attribute value in list
		for(i = 0; i < document.av_form.attribute_value.options.length; i ++) {
			if ( document.av_form.attribute_value.options[i].value == attribute ){
				document.av_form.attribute_value.options[i].selected = true;
			}
		}

		// hide loading div
		YAHOO.example.container.wait.hide();

		if (showMask != 1){
			hideScreenMask();
		}
	}
	else {
		setTimeout('showProductList(\''+attribute_id+'-'+attribute_name+'-'+attribute_key+'\', '+live+', '+visible+')', 1000);
	}
}


// reload product list based on Live/Visible parameters selected

function switchProductView(view_type){

	// default to undefined to show all products
	var live;
	var visible;

	// Live & Visible
	if (view_type == 'view_live_visible'){
		live = 'true';
		visible = 'true';
	}
	// Live & Invisible
	else if (view_type == 'view_live_invisible'){
		live = 'true';
                visible = 'false';
	}	
	// Non-live products
	else if (view_type == 'view_nonlive'){
                live = 'false';
                visible = 'false';
        }

	// re-load product list
	showProductList(cur_attr_id+'-'+cur_attr_name+'-'+cur_attr_key, live, visible);
}

// YUI XHR request - using JSON

YAHOO.example.XHR_JSON = function() {
        
	function buildTable(attribute_id, live, visible)  {	
		this.formatImage = function(elCell, oRecord, oColumn, sData) {
            elCell.innerHTML = "<a href='/StockControl/Inventory/Overview?product_id=" + oRecord.getData("PID") + "'><img class='product' src='http://[% xt_url %]/images/product/" + oRecord.getData("Image") + "/12.jpg' height='75' width='50' border='0'></a>";
        };

		// Custom sort handler to sort by designer and then by pid
		// where a and b are Record instances to compare
		this.sortDesigners = function(a, b, desc) {
            // Deal with empty values
            if(!YAHOO.lang.isValue(a)) {
                return (!YAHOO.lang.isValue(b)) ? 0 : 1;
            }
            else if(!YAHOO.lang.isValue(b)) {
                return -1;
            }

            // First compare by designer
            var comp = YAHOO.util.Sort.compare;
            var compDesigner = comp(a.getData("Designer"), b.getData("Designer"), desc);

            // If designers are equal, then compare by PID
            return (compDesigner !== 0) ? compDesigner : comp(a.getData("PID"), b.getData("PID"), desc);
        };

        var myColumnDefs = [
			{key:"Image",label:"Image",width:"70px", formatter:this.formatImage},
			{key:"PID",label:"PID",width:"50px",sortable:true},
			{key:"Designer",label:"Designer",width:"160px", sortable:true, sortOptions:{sortFunction:this.sortDesigners}},
			{key:"Name",label:"Name",width:"175px",sortable:true},
			{key:"Colour",label:"Colour",width:"65px",sortable:true},
			{key:"Season",label:"Season",width:"65px",sortable:true},
			{key:"Price",label:"Price",width:"60px",sortable:true},
			{key:"Status",label:"Status",width:"60px",sortable:true}
        ];

        this.myDataSource = new YAHOO.util.DataSource("/Retail/AttributeManagement/GetAttributeProducts?");
        this.myDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
        this.myDataSource.connXhrMode = "queueRequests";
        this.myDataSource.responseSchema = {
            resultsList: "ResultSet.Result",
            fields: [	{key:"Image"}, 
			{key:"PID",parser:YAHOO.util.DataSource.parseNumber},
			{key:"Designer"},
			{key:"Name"},
			{key:"Colour"},
			{key:"Season"},
			{key:"Price",parser:YAHOO.util.DataSource.parseNumber},
			{key:"Status"}]
        };

		
		var myConfigs = {
			initialRequest:"ms=" + new Date().getTime() + "&attribute_id="+ attribute_id +"&live="+live+"&visible="+visible+"&channel_id=[% channel_id %]",
            //sortedBy:{key:"PID",dir:"desc"},
            paginated:true,
            paginator: new YAHOO.widget.Paginator({
                rowsPerPage: 100
            //    dropdownOptions: [10,25,50,100],
            //    pageLinks: 5
           })
        }

        this.myDataTable = new YAHOO.widget.DataTable("product_list", myColumnDefs, this.myDataSource, myConfigs);
	}
	
	return {
		init: function(attribute_id, live, visible) {
            buildTable(attribute_id, live, visible);
        }
	}
} ();


YAHOO.namespace("example.container");

function showLoadingLayer (){

	showScreenMask();
	
	if (!YAHOO.example.container.wait) {

            // Initialize the temporary Panel to display while waiting for external content to load

	    YAHOO.example.container.wait =
                new YAHOO.widget.Overlay(
                    "loader_wait",
                    {
                        fixedcenter:    false,
                        close:          false,
                        draggable:      false,
                        zindex:         10,
                        x: 30,
                        y: 15,
                        visible:        false
                    }
                )
            ;

            YAHOO.example.container.wait.setBody("<img src=\"/images/bigrotation2.gif\" align=\"right\" />");
            YAHOO.example.container.wait.render(document.body);

        }

	// Show the Panel
        YAHOO.example.container.wait.show();
}


[% IF attribute_type_id && attribute_type %]
	YAHOO.util.Event.addListener(window, "load", function() { 
		makeAttributeRequest("[% attribute_type_id %]-[% attribute_type %]"); 

		for(i = 0; i < document.at_form.attribute_type.options.length; i ++) {
			if ( document.at_form.attribute_type.options[i].value == "[% attribute_type_id %]-[% attribute_type %]" ){
				document.at_form.attribute_type.options[i].selected = true;
			}
		}
		
	});
[% END %]

[% IF attribute_id && attribute_name && attribute_key %]
	YAHOO.util.Event.addListener(window, "load", function() { 
		showProductList('[% attribute_id %]-[% attribute_name %]-[% attribute_key %]'); 
	});
[% END %]



function showScreenMask(){
	
	// get browser size for mask layer
	var winW = 630, winH = 460;

	if (parseInt(navigator.appVersion)>3) {
		if (navigator.appName=="Netscape") {
			winW = window.innerWidth;
			winH = window.innerHeight;
		}
		if (navigator.appName.indexOf("Microsoft")!=-1) {
			winW = document.body.offsetWidth;
			winH = document.body.offsetHeight + (document.body.scrollHeight -650);
		}
	}

	// set mask layer width and height to browser dimensions
	document.getElementById('screenMask').style.width = winW - 18;
	document.getElementById('screenMask').style.height = winH;

	// show mask layer
	document.getElementById('screenMask').style.display = "block";

}

function hideScreenMask(){

	document.getElementById('screenMask').style.display = "none";

}


function initUpload(){
  
	var onUploadButtonClick = function(e){
		//the second argument of setForm is crucial,
		//which tells Connection Manager this is a file upload form
		YAHOO.util.Connect.setForm('av_managementForm', true);
		
			
		var handleUploadSucess = function(oResponse){

			var response = oResponse.responseText;

			if ( response.match("Internal Server Error") || response.match("Error: ")){
				showAJAXResponse(response);
			}
			else {
				showAJAXResponse('Image successfully uploaded');

				document.currentSlugImg.src = '/[% channels.$channel_id.slug_path %]'+ cur_attr_key +'.gif?ms=' + new Date().getTime();
			}
		} 

		var uploadHandler = {
			upload:handleUploadSucess
		};

                YAHOO.util.Connect.initHeader(
                    "X-CSRF-Token", $("meta[name='csrf_token']").attr("content")
                );
		YAHOO.util.Connect.asyncRequest('POST', '/Retail/AttributeManagement/UploadSlugImage?ms=' + new Date().getTime() + '&slug_name='+cur_attr_name + '&channel_id=[% channel_id %]&channel_config=[% channels.$channel_id.config_section %]', uploadHandler);

	};
  
	YAHOO.util.Event.on('uploadButton', 'click', onUploadButtonClick);
}

YAHOO.util.Event.on(window, 'load', initUpload);


function showAJAXResponse(response){
	// check for errors
	var re = /(ERROR|Error)/;
	if ( re.test(response) ){
		response = "<font color='#cc0000'>" + response + "</font>";
	}


	// write message to response layer
	document.getElementById('AJAX_Response').innerHTML = response;

	// align response layer centrally
	alignDivCenter('AJAX_Display', 350, 200);

	// show response layer
	document.getElementById('AJAX_Display').style.display = "block";


}

function hideAJAXResponse(){

	// clear out message in response layer
	document.getElementById('AJAX_Response').innerHTML = '';

	// hide response layer
	document.getElementById('AJAX_Display').style.display = "none";

	// hide loading div
	YAHOO.example.container.wait.hide();
	document.getElementById('screenMask').style.display = "none";

	showMask = 0;

}

</script>

[% END #BLOCK attrib_management %]

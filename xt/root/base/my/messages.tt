
[% MACRO nicedate(d) BLOCK %]
    [%# d.strftime('%d %b %Y, %R') %]
    [%# d.time_zone_short_name() %]
    [%# d.strftime('%d %b %Y') %]
    [% d.ymd %]
    [% d.hms %]
[% END %]

[% IF (message_list.count == 0) %]
<div style="display:block;">
    <p>No messages to display.</p>
    <img src="/images/blank.gif" width="1" height="400" />
</div>
[% ELSE %]
    <span id="message_dialog_anchor"></span>

    <!-- Message List / Search Results : Start -->
    <table border="0" class="data" style="border: 1px solid #999; width:100%;">

        <!-- Header Row -->
        <tr>
            <td colspan="5" class="dividerHeader"></td>
        </tr>
        <tr>
            <td class="tableHeader" width="20px;">&nbsp;</td>
            <td class="tableHeader" style="width:110px;">Date</td>
            <td class="tableHeader" style="width:200px; overflow:hidden;">From</td>
            <td class="tableHeader" style="">Subject</td>
            <td class="tableHeader" width="20px;">&nbsp;</td>
        </tr>
        <tr>
            <td colspan="5" class="dividerHeader"></td>
        </tr>
        <!-- Header Row : End -->

        [% dummy_value = message_list.reset %]
        [% FOREACH message IN message_list.all %]
        <tr>
            <td style="left-margin:2px;right-margin:2px;">
                <div id="icon_[%message.id%]">
                    [% IF message.viewed %]
                    &nbsp;
                    [% ELSE %]
                    <img src="/images/icons/email.png" width="16" height="16" alt="Unread" title="Unread" />
                    [% END %]
                </div>
            </td>
            <td style="width:110px;">
                [% nicedate(message.created) %]
            </td>
            <td style="width:200px;">
                [% IF 'Application' == message.sender.name %]
                <img src="/images/icons/computer.png" width="16" height="16" alt="System Message" title="System Message" style="display:inline;"/>
                <em>System Message</em>
                [% ELSE %]
                <img src="/images/icons/user_suit.png" width="16" height="16" alt="Human Bean" title="Human Bean" style="display:inline;"/>
                [% message.sender.name %]
                [% END %]
            </td>
            <td>
                <a href="javascript:show_message('[%message.id%]');" class="showicon">[% message.subject %]</a>
            </td>

            <td style="left-margin:2px;right-margin:2px;">
                <div id="deleteicon_[%message.id%]">
				[% IF ! message.deleted && message.viewed %]
					<a href="javascript:delete_message('[%message.id%]');"><img src="/images/icons/email_delete.png" width="16" height="16" alt="Delete Message" title="Delete Message" /></a>
				[% ELSE %]
					&nbsp;
				[% END %]
			</div>
            </td>
        </tr>
        [% END %]

        <tr>
            <td class="tableHeader" colspan="5" align="right">
                [% messages.unread %] unread message(s)
            </td>
        </tr>

    </table>

    <!-- message dialog (YUI) -->
    <div id="dialog_view_message" style="visibility:hidden;">
        <div class="hd">
            PLACEHOLDER FOR DYNAMIC TITLE
        </div>
        <div class="bd">
            PLACEHOLDER FOR DYNAMIC CONTENT
        </div>
    </div>
    <!-- (end) message dialog (YUI) -->

    [% PROCESS shared/small_loading_please_wait.tt %]

    <script type="text/javascript">
        function show_message(message_id) {
            YAHOO.xtracker.small_loading.wait.show();
            YAHOO.xtracker.my_messages.dialog_view_message.setHeader('Message #' + message_id);

            /* update the message dialog contents */
            UpdateMessageDialogObject.startRequest(
                "do_action=retrieve_message"
                + "&msg_id=" + message_id
            );
        }
        function delete_message(message_id) {
            DeleteMessageDialogObject.startRequest(
                "do_action=delete_message"
                + "&msg_id=" + message_id
            );
        }

        /*
        *  code to fetch/update the message dialog content
        */
        function stringToJson(s) {
            return eval('(' + s + ')');
        }
        var DeleteMessageDialogObject = {
            handleSuccess:function(o){
                // This member handles the success response
                // and passes the response object o to UpdateNoteMenuObject's
                // processResult member.
                this.processResult(o);
            },
            handleFailure:function(o){
                YAHOO.xtracker.small_loading.wait.hide();
                // Failure handler
                alert("Whoops! Something bad happened:\n" + o.statusText);
            },
            processResult:function(o){
                //YAHOO.xtracker.small_loading.wait.hide();
                // convert the response to usable JSON
                var data = stringToJson(o.responseText);

                // reload the page
                document.location.reload(true);
            },
            startRequest:function(postdata) {
                // show the "we're doing something" spinner
                YAHOO.xtracker.small_loading.wait.show();
                // start the POST
                // https://metacpan.org/module/Plack::Middleware::CSRFBlock#javascript
                YAHOO.util.Connect.initHeader(
                    "X-CSRF-Token", $("meta[name='csrf_token']").attr("content")
                );
                YAHOO.util.Connect.asyncRequest(
                    'POST',
                    '/My/Messages',
                    {
                        success:DeleteMessageDialogObject.handleSuccess,
                        failure:DeleteMessageDialogObject.handleFailure,
                        scope:  DeleteMessageDialogObject
                    },
                    postdata
                );
            }
        };
        var UpdateMessageDialogObject = {
            handleSuccess:function(o){
                // This member handles the success response
                // and passes the response object o to UpdateNoteMenuObject's
                // processResult member.
                this.processResult(o);
            },
            handleFailure:function(o){
                YAHOO.xtracker.small_loading.wait.hide();
                // Failure handler
                alert("Whoops! Something bad happened:\n" + o.statusText);
            },
            processResult:function(o){
                YAHOO.xtracker.small_loading.wait.hide();
                // convert the response to usable JSON
                var data = stringToJson(o.responseText);
                // update the dialog
                YAHOO.xtracker.my_messages.dialog_view_message.setBody(data.message.body);
                YAHOO.xtracker.my_messages.dialog_view_message.setHeader(data.message.subject || 'No Subject');
                // remove the "viewed" icon
                var icon_div = YAHOO.util.Dom.get('icon_' + data.message.id);
                icon_div.innerHTML = '&nbsp;'

                // show the dialog
                YAHOO.xtracker.my_messages.dialog_view_message.cfg.setProperty('context', ['icon_' + data.message.id,'tl','br']);
                YAHOO.xtracker.my_messages.dialog_view_message.show();
            },
            startRequest:function(postdata) {
                // show the "we're doing something" spinner
                YAHOO.xtracker.small_loading.wait.show();
                // replace the dialog content
                YAHOO.xtracker.my_messages.dialog_view_message.setHeader(
                    'Retrieving...'
                );
                YAHOO.xtracker.my_messages.dialog_view_message.setBody(
                    '<img src="/images/rel_interstitial_loading.gif" />'
                );
                // start the fetch
                // https://metacpan.org/module/Plack::Middleware::CSRFBlock#javascript
                YAHOO.util.Connect.initHeader(
                    "X-CSRF-Token", $("meta[name='csrf_token']").attr("content")
                );
                YAHOO.util.Connect.asyncRequest(
                    'POST',
                    '/My/Messages',
                    {
                        success:UpdateMessageDialogObject.handleSuccess,
                        failure:UpdateMessageDialogObject.handleFailure,
                        scope:  UpdateMessageDialogObject
                    },
                    postdata
                );
            }
        };

        /*
        *  prepare the message dialog
        */
        YAHOO.namespace("xtracker.my_messages");
        function messages_init() {
            // Define various event handlers for Dialog
            var handleSubmit = function() {
                this.submit();
            };
            var handleCancel = function() {
                this.cancel();
            };
            var handleSuccess = function(o) {
                YAHOO.log('Success');
            };
            var handleFailure = function(o) {
                alert("Submission failed: " + o.status);
            };

            // Instantiate the Dialog
            YAHOO.xtracker.my_messages.dialog_view_message = new YAHOO.widget.Dialog(
                'dialog_view_message', 
                {
                    fixedcenter : false,
                    context: ['message_dialog_anchor', 'tl', 'br' ],
                    width: 400,
                    postmethod: "async",
                    visible : false, 
                    modal: false,
                    constraintoviewport : true,
                    buttons : [
                        { text:'Close',  handler:handleCancel }
                    ]
                }
            );

            // Render the Dialog
            YAHOO.xtracker.my_messages.dialog_view_message.render();
        }
        YAHOO.util.Event.onDOMReady(messages_init);

    </script>
[% END %]

<script type='text/javascript'>

TABLES = [
    {
        name    : 'Processing Times',
        id      : 'processing_times',
        service : '/shippingconfig/',
        method  : 'processing_times',
        columns : {
            'Name'      : 'name',
            'Type'      : 'type',
            'Hours'     : 'processing_time',
            'Overrides' : 'bespoke_overrides',
        },
        transform : function(row) {
            // Handle overrides
            if(row.overrides_all === 1) {
                row.bespoke_overrides = "ALL";
            }
            else {
                if(row.overrides.length > 0) {
                    row.bespoke_overrides = row.overrides.join(", ");
                }
            }
            return row;
        },
    },
    {
        name    : 'WMS Priorities',
        id      : 'wms_priorities',
        service : '/shippingconfig/',
        method  : 'wms_priorities',
        columns :   {
            'Name'              : 'name',
            'Type'              : 'type',
            'Initial Priority'  : 'initial_priority',
            'Bumped Priority'   : 'bumped_priority',
            'Bumped Interval'   : 'bumped_interval',
        },
        transform : function(row) {
            return row;
        }
    },
];


function allot_element(name, id) {  // Append a div to the page
    var assembler = $("<div />").css({
        "margin-bottom" : '2%',
    });
    assembler.append("<h2>" + name + "</h2>");
    var allot_div = $("<div />").attr('id', id);
    assembler.append(allot_div);
    $("#config_tables").append(assembler);
}

function deliver_table(data, table) {
    var payload = data.payload;
    var table_id = table.id;
    var headers = [];
    for (var i in table.columns) {
        headers.push(i);
    }

    var width = headers.length;

    // Make the table
    var assembler = $('<table />').addClass('data').css({
        // Pre-existing awkward CSS requirements
        "padding"           : "1%",
        "border-spacing"    : "0px 2px",
        "border"            : "0",
        "width"             : (width * 15).toString()+ "%",
    });

    // Make a header row
    var header = $("<thead> <tr /> </thead>").children('tr');
    for (var i in headers) {
        var th = $("<th />");
        th.addClass("tableHeader"); // Pre-existing CSS
        th.html(headers[i]);
        header.append(th);
    }

    assembler.append(header);

    var tbody = $("<tbody />");

    // assemble config data row by row
    for (var i in payload) {
        payload[i] = table.transform(payload[i]);
        var tr = $("<tr />");
        for (var j in headers) {
            var value = payload[i][ table.columns[ headers[j] ] ];
            // Make null/undefined values more visible
            value = value != null ? value : "-";
            var td = $("<td />");
            td.html(value);
            tr.append(td);
        }
        tbody.append(tr);
    }

    assembler.append(tbody);

    $("#" + table_id ).append(assembler);

}

$(document).ready(function(){

    for (var i in TABLES) {
        allot_element(TABLES[i].name, TABLES[i].id);

        // Weird-looking closure alert
        // Spits out a bespoke function
        // to update TABLES[i] on completion
        var on_complete = ( function() {
            var this_table = TABLES[i];
            return function(data) {
                deliver_table(data, this_table);
            }
        })();

        $.ajax(TABLES[i].service + TABLES[i].method).done(on_complete);
    }
});

</script>

<div id='config_tables' style="width: 100%;">
</div>

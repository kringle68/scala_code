<script src='/javascript/webtoolkit.sprintf.js'></script>

<style type="text/css">
	#jq_status_bar {
		position: relative;
		border-top: 2px solid #444444;
		border-bottom: 1px dotted #999999;
		height: 20px;
	}
	#jq_height_ctrl {
		float: left;
		width: 5px;
		height: 20px;
	}
	#jq_action_txt {
		float: left;
		width: 590px;
		padding-top: 3px;
	}
	#jq_action_txt SPAN {
		font-family: courier;
		font-weight: normal;
		font-size: 12px;
	}
	#jq_refresh {
		float: right;
		width: 200px;
	}
	#jq_refresh IMG {
		padding-top: 2px;
	}
	#jq_refresh SPAN {
		display: block;
		padding-top: 3px;
	}
	#jq_status {
		float: right;
		width: 21px;
		padding-top: 2px;
	}

	TD.arg_list_td {
		height: 0px !important;
	}
	DIV.arg_list {
		position: relative;
		padding-bottom: 3px;
		display: none;
		width: 100%;
	}
	DIV.arg_list SPAN { font-weight: bold; }
	DIV.arg_list DIV.row {
		position: relative;
		width: 100%;
		padding-left: 50px;
		padding-bottom: 2px;
	}
	DIV.arg_list IMG {
		float: left;
		width: 9px;
		padding-top: 3px;
		margin-right: 5px;
		cursor: pointer;
	}
	DIV.arg_list DIV.tag {
		float: left;
		width: 130px;
	}
	DIV.arg_list DIV.data {
		float: left;
		width: 620px;
		overflow: auto;
	}
	DIV.arg_list DIV.data PRE { width: 100%; display: none; font-size: 11px; }
</style>

<div id="jq_status_bar">
	<div id="jq_height_ctrl">&nbsp;</div>
	<div id="jq_action_txt"></div>
	<div id="jq_status"><img id="jq_status_img" src="/images/icons/cog.png" title="Job Queue Status Unknown" /></div>
	<div id="jq_refresh"><a href="javascript:toggle_refresh();" style="text-decoration: none;"><img id="jq_refresh_img" src="/images/icons/control_pause.png" title="Pause Refresh" align="left" /><span>Refreshing list every 5 seconds</a></span></div>
	<br clear="all" />
</div>
<span id="jql_title" class="title">Job List</span><br/>
<div id="jql_list"></div>

<script type="text/javascript" language="javascript">

var curr_list_type	= '';
var timeout_id		= 0;


function toggle_refresh () {
	if ( timeout_id > 0 ) {
		clearTimeout(timeout_id);
		timeout_id	= 0;
		document.getElementById('jq_action_txt').innerHTML	= "<span>refresh currently paused</span>";
		document.getElementById('jq_refresh_img').src		= "/images/icons/control_play.png";
		document.getElementById('jq_refresh_img').title		= "Continue Refresh";
	}
	else {
		document.getElementById('jq_action_txt').innerHTML	= "";
		document.getElementById('jq_refresh_img').src		= "/images/icons/control_pause.png";
		document.getElementById('jq_refresh_img').title		= "Pause Refresh";
		refresh_list();
	}
}

function show_arg (arg_id) {
	if ( document.getElementById('jql_argv_'+arg_id).style.display != "inline" ) {
		document.getElementById('jql_argv_'+arg_id).style.display	= 'inline';
		document.getElementById('jql_argi_'+arg_id).src="/images/minus.gif";
	}
	else {
		document.getElementById('jql_argv_'+arg_id).style.display	= 'none';
		document.getElementById('jql_argi_'+arg_id).src="/images/plus.gif";
	}
}

function toggle_arg_list (arg_id) {
	if ( document.getElementById('jql_arg_'+arg_id).style.display != "block" ) {
		document.getElementById('jql_arg_'+arg_id).style.display	= 'block';
		document.getElementById('jql_argi_'+arg_id).src="/images/minus.gif";
	}
	else {
		document.getElementById('jql_arg_'+arg_id).style.display	= 'none';
		document.getElementById('jql_argi_'+arg_id).src="/images/plus.gif";
	}
}

function draw_list (list_type,list,list_fields,list_widths) {

	var list_code	= "";
	var colspan		= list_fields.length + 1;

	for ( var i=0; i<list.length; i++ ) {
		list_code	+= '<tr height="20"><td>&nbsp;</td>';
		for ( var j=0; j<list_fields.length; j++ ) {
			if ( (list_widths != null) && (list_widths[j] > 0) )
				list_code	+= '<td style="width: '+list_widths[j]+'px;">';
			else
				list_code	+= '<td>';
			list_code	+= unescape(eval("list[i]."+list_fields[j])) + '</td>';
		}
		list_code	+= '</tr>';
		list_code	+= '<tr><td colspan="'+colspan+'" class="divider"></td></tr>';
	}

	return list_code;
}

sprintf = sprintfWrapper.init;

// alg cribbed from :
// http://blogs.perl.org/users/ovid/2010/12/perl101-red-to-green-gradient.html
function gradient (mins, maxs, vals)
{
  var min = Number(mins);
  var max = Number(maxs);
  var val = Number(vals);

  var mid   = Number (( min +max ) / 2);
  var scale = 255 / ( mid - min );

  if ( val <= min ) {   return "FF0000"; }
  if ( val >= max ) {   return "00FF00"; }
  if ( val < mid  ) {   return sprintf ("FF%02X00",       (( val - min ) * scale )); }
                        return sprintf ("%02XFF00", 255 - (( val - mid ) * scale ));
}

function draw_JOB_list (list_type,list,list_fields,list_widths) {

	var list_code	= "";
	var colspan		= list_fields.length + 1;

    // list is sorted on priority ascending
    var min  = eval("list[0]."            +'priority');
    var max  = eval("list[list.length-1]."+'priority');

	for ( var i=0; i<list.length; i++ ) {
        var priority = Number(eval("list[i]."+'priority'));
        var bgcol    = gradient (min, max, priority);

		list_code	+= '<tr height="20" style="background-color:#'+bgcol+';">';
        list_code   += '<td align="center"><a href="javascript:toggle_arg_list('+i+');"><img id="jql_argi_'+i+'" src="/images/plus.gif" width="9" height="9" title="Toggle Arguments" /></a></td>';

		for ( var j=0; j<list_fields.length; j++ ) {
			list_code	+= '<td>' + eval("list[i]."+list_fields[j]) + '</td>';
		}
		list_code	+= '</tr>';
		list_code	+= '<tr>';
		list_code	+= '<td class="arg_list_td" colspan="'+colspan+'">';

		list_code	+= '<div class="arg_list" id="jql_arg_'+i+'">';
		list_code	+= '<span>&nbsp;&nbsp;&nbsp;Arguments:</span>';
		var num = 0;
		for ( var arg in list[i].args ) {
			num++;
			list_code	+= '<div class="row">';
			list_code	+= '<div class="tag">'+arg+'</div>';
			if ( list[i].args[arg].type == 's' ) {
				list_code	+= '<div class="data">' + unescape(list[i].args[arg].value) + '</div>';
			}
			else {
				list_code	+= '<img id="jql_argi_'+i+'_'+num+'" src="/images/plus.gif" onclick="javascript:show_arg(\''+i+'_'+num+'\');" title="Click Here" />';
				list_code	+= '<div class="data"><pre id="jql_argv_'+i+'_'+num+'">' + unescape(list[i].args[arg].value) + '</pre></div>';
			}
			list_code	+= '<br clear="all" />';
			list_code	+= '</div>';
		}
		list_code	+= '</div>';

		list_code	+= '</td>';
		list_code	+= '</tr>';
		list_code	+= '<tr><td colspan="'+colspan+'" class="divider"></td></tr>';
	}

	return list_code;
}


var handleJQLRequest	= function(oResponse) {
	var oResults	= eval("(" + oResponse.responseText + ")");

	if ( oResults.status == 'OK' ) {
		var new_table	= "";
		var list_fields	= oResults.list_fields;
		var colspan		= list_fields.length + 1;

		document.getElementById('jql_title').innerHTML	= oResults.title;
		new_table	= '<table width="100%" cellpadding="0" cellspacing="0" border="0" class="data">';
		new_table	+= '<thead>';
		new_table	+= '<tr><td colspan="'+colspan+'" class="dividerHeader"></td></tr>';
		new_table	+= '<tr height="24"><td class="tableHeader" style="width: 20px;">&nbsp;</td>';
		for ( var i=0; i<oResults.headers.length; i++ ) {
			new_table	+= '<td class="tableHeader" valign="middle">'+oResults.headers[i]+'</td>';
		}
		new_table	+= '</tr>';
		new_table	+= '<tr><td colspan="'+colspan+'" class="dividerHeader"></td></tr>';
		new_table	+= '</thead>';

		new_table	+= '<tbody id="jql_list_body">';

		if ( oResults.list_type == "JOB" || oResults.list_type == "FAILED" )
			new_table	+= draw_JOB_list(oResults.list_type,oResults.list,oResults.list_fields);
		else
			new_table	+= draw_list(oResults.list_type,oResults.list,oResults.list_fields,oResults.widths);

		new_table	+= '</tbody>';
		new_table	+= '</table>';
		document.getElementById('jql_list').innerHTML	= new_table;

		curr_list_type	= oResults.list_type;

		document.getElementById('jq_action_txt').innerHTML	= '';
	}
	else {
		document.getElementById('jq_action_txt').innerHTML	= '<span>'+oResults.msg+'</span>';
	}

	if ( oResults.no_refresh == null ) {
		timeout_id	= setTimeout("refresh_list()",5000);
	}
	else {
		document.getElementById('jq_refresh_img').src		= "/images/icons/control_play.png";
		document.getElementById('jq_refresh_img').title		= "Continue Refresh";
		document.getElementById('jq_action_txt').innerHTML	= '<span>no refresh for this list</span>';
		timeout_id	= 0;
	}

	switch ( oResults.jq_status ) {
		case '-1':
			document.getElementById('jq_action_txt').innerHTML	= "<span>CAN'T GET TO JOB QUEUE TO CHECK STATUS, POSSIBLY CAN'T CREATE JOBS EITHER</span>";
			document.getElementById('jq_status_img').src		= '/images/icons/cog_error.png';
			document.getElementById('jq_status_img').title		= "Job Queue Can't Be Found";
			break;
		case '0':
			document.getElementById('jq_action_txt').innerHTML	= '<span>Job Queue is not running</span>';
			document.getElementById('jq_status_img').src		= '/images/icons/cog.png';
			document.getElementById('jq_status_img').title		= 'Job Queue is Not Running';
			break;
		default:
			document.getElementById('jq_status_img').src		= '/images/icons/cog_go.png';
			document.getElementById('jq_status_img').title		= 'Job Queue Running (PID: '+oResults.jq_status+')';
	}
};

var handleFailure		= function(oResponse) {

	if (oResponse.responseText !== undefined) {
		alert(oResponse.statusText);
	}

};

var JQLRequestCallBack	= {
	success:handleJQLRequest,
	failure:handleFailure
};

function JQL_Request (xopt) {

	var	request	= YAHOO.util.Connect.asyncRequest('GET', '/Admin/JobQueue/AJAX/GetJobQueueLists?ms=' + new Date().getTime() + '&list_type='+xopt, JQLRequestCallBack);

}

function refresh_list () {
	var list_type	= curr_list_type;

	if ( timeout_id > 0 )
		clearTimeout(timeout_id);
	else {
		document.getElementById('jq_refresh_img').src		= "/images/icons/control_pause.png";
		document.getElementById('jq_refresh_img').title		= "Pause Refresh";
	}

	if ( refresh_list.arguments.length > 0 && refresh_list.arguments[0] != "[object Event]" )
		list_type	= refresh_list.arguments[0];

	if ( list_type == '' )
		list_type	= 'JOB';

	if ( list_type != curr_list_type )
		document.getElementById('jq_action_txt').innerHTML	= '<span>fetching list</span>';
	else
		document.getElementById('jq_action_txt').innerHTML	= '<span>refreshing list</span>';

	timeout_id	= 0;
	JQL_Request(list_type);
}

refresh_list();

</script>

[% MACRO shipment_header_block BLOCK %]
    Shipment [% shipment.id %][% IF shipment.is_on_hold %] (<span class="shipment-on-hold">on hold</span>)[% END %]:<br />
[% END %]

[% MACRO container_block BLOCK %]
    <span[% IF container.has_arrived == 0 %] class='standout' [% END %]>[% container.id %]</span>
[% END %]

[% MACRO shipment_awaiting_allocations_block BLOCK %]
    <div class="shipment-group">
        [% shipment_header_block(shipment = shipment) %]
        [% FOREACH reason IN awaiting_allocation_reasons %]
            [% reason %]<br />
        [% END %]
        Containers: [% shipment_containers %]
    </div>
[% END %]

[% MACRO shipment_awaiting_containers_block BLOCK %]
    <div class="shipment-group">
        [% shipment_header_block(shipment = shipment) %]
        Waiting for containers: [% awaiting_containers.join(', ') %]<br />
        [% IF shipment_containers %]
            Containers arrived: [% shipment_containers %]
        [% END %]
    </div>
[% END %]

[% MACRO shipment_ready_block BLOCK %]
    <div class="shipment-group ready-for-packing">
        [% shipment_header_block(shipment = shipment) %]
        Containers: [% shipment_containers %]
    </div>
[% END %]

<table class="data padded divided-data">
    <tr>
        <th width="16%">Lane</th>
        <th width="28%">Shipments ready for packing</th>
        <th width="28%">Shipments waiting for containers</th>
        <th width="28%">Shipments waiting for picking</th>
    </tr>
    [% FOREACH pl IN packlanes %]
        [% IF pl.is_multitote %]
        <tr>
            <td>
                <b>[% pl.human_name %]</b>
            </td>
            [% shipments_ready               = '' %]
            [% shipments_awaiting_container  = '' %]
            [% shipments_awaiting_allocation = '' %]

            [% FOREACH shipment IN pl.containers_rs.shipments.all %]
                [% awaiting_allocation_reasons = [] %]
                [% awaiting_containers         = [] %]
                [% picked_containers           = [] %]

                [% FOREACH allocation IN shipment.allocations %]
                    [% IF allocation.is_picked %]
                        [% FOREACH allocation_item IN allocation.allocation_items %]
                            [% container = allocation_item.shipment_item.container %]
                            [% NEXT IF container.pack_lane_id != pl.id %]
                            [% container_id = container.id %]
                            [% IF !seen.$container_id %]
                                [% IF container.has_arrived == 0 %]
                                    [% awaiting_containers.push(container_block(container = container)) %]
                                [% ELSE %]
                                    [% picked_containers.push(container_block(container = container)) %]
                                [% END %]
                                [% seen.$container_id = 1 %]
                            [% END %]
                        [% END %]
                    [% ELSIF allocation.is_staged || allocation.unpicked_items.size %]
                        [% awaiting_allocation_reasons.push(allocation.waiting_summary) %]
                    [% END %]
                [% END # end of allocations loop %]
                [% IF awaiting_allocation_reasons.size %]
                    [% shipment_containers = picked_containers.merge(awaiting_containers).join(', ') %]
                    [% shipments_awaiting_allocation = shipments_awaiting_allocation _
                        shipment_awaiting_allocations_block(
                            shipment                    = shipment,
                            shipment_containers         = shipment_containers,
                            awaiting_allocation_reasons = awaiting_allocation_reasons
                        )
                    %]
                [% ELSIF awaiting_containers.size %]
                    [% shipment_containers = picked_containers.join(', ') %]
                    [% shipments_awaiting_container = shipments_awaiting_container _
                        shipment_awaiting_containers_block(
                            shipment                    = shipment,
                            shipment_containers         = shipment_containers,
                            awaiting_containers         = awaiting_containers
                        )
                    %]
                [% ELSE %]
                    [% shipment_containers = picked_containers.merge(awaiting_containers).join(', ') %]
                    [% shipments_ready = shipments_ready _
                        shipment_ready_block(
                            shipment                    = shipment,
                            shipment_containers         = shipment_containers,
                        )
                    %]
                [% END %]
            [% END # end of shipments loop %]
            <td>
                [% FOREACH shipment_html IN shipments_ready %]
                    [% shipment_html %]
                [% END %]
            </td>
            <td>
                [% FOREACH shipment_html IN shipments_awaiting_container %]
                    [% shipment_html %]
                [% END %]
            </td>
            <td>
                [% FOREACH shipment_html IN shipments_awaiting_allocation %]
                    [% shipment_html %]
                [% END %]
            </td>
        </tr>
        [% END # end of this multitote packlane %]
    [% END # end of packlanes loop %]
</table>

Summary:        XTDC Transitional Permissions Package
License:        Commercial
Vendor:	        Net-A-Porter
Group:          XTDC
Packager:       Backend Team <backend@net-a-porter.com>
BuildArch:      noarch

%define XTDC_GROUP        xt
%define XTDC_USER         xt-web
%define XTDC_USER_JQ      xt-jq
%define XTDC_USER_AMQ     xt-amq
%define XTDC_USER_CRON    xt-cron

%define XTDC_BASE_DIR      /opt/xt/deploy/xtracker
%define XTDC_LOG_DIR       /var/log/nap/xt
%define XTDC_LOG_ARCHIVE   /var/log/nap/xt_archived
%define XTDC_TTCACHE       /tmp/ttcache
%define XTDC_STATIC_DATA   /var/data/xt_static
%define XTDC_GENERATED_CSS %{XTDC_BASE_DIR}/root/static/css/xtracker.css
%define XTDC_PRINT_CSS     %{XTDC_BASE_DIR}/root/static/css/print.css

%description
A transitional package to manage changing permissions when
introducing new XT users and group

%pre

echo "****"
echo "Installing new application service users"
echo "****"

# Stop services
if [ -f /etc/init.d/xt_amq_consumer_ctl ]; then
    /etc/init.d/xt_amq_consumer_ctl stop
fi
if [ -f /etc/init.d/xt ]; then
    /etc/init.d/xt stop
fi
if [ -f /etc/init.d/jobqueuectl ]; then
    /etc/init.d/jobqueuectl --worker-group=ALL stop
fi

# Create shared system group
getent group %{XTDC_GROUP} > /dev/null || groupadd -r %{XTDC_GROUP} > /dev/null

# Assert the existence of the required group. Die horribly if absent
getent group %{XTDC_GROUP} > /dev/null
if [ $? -ne 0 ]; then
    echo "Absent group: %{XTDC_GROUP} ...Aborting...";
    exit 1;
fi

# Create system users (no shell)
for user in %{XTDC_USER_JQ} %{XTDC_USER_AMQ} xml;
do
    getent passwd ${user} > /dev/null  \
        || useradd -g %{XTDC_GROUP} -r -d /home/${user} -m -s /sbin/nologin ${user} > /dev/null

    # Ensure the user is in the XTDC group
    usermod -a -G %{XTDC_GROUP} ${user}

    # Assert the existence of the users. Die horribly if absent
    getent passwd ${user} > /dev/null
    if [ $? -ne 0 ]; then
        echo "Absent user: ${user} ...Aborting...";
        exit 1;
    fi
done;

# Create system users (shell)
for user in %{XTDC_USER} %{XTDC_USER_CRON};
do
    getent passwd ${user} > /dev/null  \
        || useradd -g %{XTDC_GROUP} -r -d /home/${user} -m -s /bin/bash ${user} > /dev/null

    # Ensure the user is in the XTDC group
    usermod -a -G %{XTDC_GROUP} ${user}

    # Create an .ssh directory
    [ -d /home/${user}/.ssh ] || mkdir -m 0700 /home/${user}/.ssh
    chown ${user} /home/${user}/.ssh

    # Assert the existence of the users. Die horribly if absent
    getent passwd ${user} > /dev/null
    if [ $? -ne 0 ]; then
        echo "Absent user: ${user} ...Aborting...";
        exit 1;
    fi
done;

# just remove everything rather than setting specific owner permissions
if [ -d %{XTDC_TTCACHE} ]; then
    rm -rf %{XTDC_TTCACHE}
fi

# remove generated css files
if [ -f %{XTDC_GENERATED_CSS} ]; then
    rm -f %{XTDC_GENERATED_CSS}
fi

# remove generated print css files
if [ -f %{XTDC_PRINT_CSS} ]; then
    rm -f %{XTDC_PRINT_CSS}
fi

# change ownership and permissions on xt generated files (print_docs etc)
if [ -d %{XTDC_STATIC_DATA} ]; then
    chown -R %{XTDC_USER}:%{XTDC_GROUP} %{XTDC_STATIC_DATA}
    chmod -R 775 %{XTDC_STATIC_DATA}
fi

# Archive existing xt log files
if [ -d %{XTDC_LOG_DIR} ]; then
    # Ensure archive directory exists
    [ -d %{XTDC_LOG_ARCHIVE} ] || mkdir %{XTDC_LOG_ARCHIVE}
    chown %{XTDC_USER}:%{XTDC_GROUP} %{XTDC_LOG_ARCHIVE}

    # Move any files
    find %{XTDC_LOG_DIR} -type f '!' -name \*pid -exec mv -t %{XTDC_LOG_ARCHIVE} {} \+
fi

%install

%files
